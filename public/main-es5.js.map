{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/nutrition/nutrition.component.ts","webpack:///src/app/components/nutrition/nutrition.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/nutrition-analysis.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","providers","appRoutes","path","component","canActivate","AppModule","forRoot","declarations","imports","bootstrap","AboutComponent","authService","router","HomeComponent","getProfile","subscribe","About","user","err","console","log","LoginComponent","flashMessage","username","password","authenticateUser","data","success","storeUserData","token","show","cssClass","timeout","navigate","msg","onLoginSubmit","NavbarComponent","logout","NutritionComponent","NutritionAnalysisService","tittle","ingrS","recipe","ingr","split","postFoodRecipeNutriAnalysis","res","nutriets","error","esto","slice","onRecipeSubmit","RegisterComponent","validateService","name","email","validateRegister","validateEmail","validateName","validateUsername","registerUser","onRegisterSubmit","AuthGuard","loggedIn","AuthService","http","headers","append","post","map","json","loadToken","authToken","get","localStorage","setItem","JSON","stringify","getItem","clear","nutritionAnalysisURL","appID","appKey","ValidateService","undefined","re","test","useregex","nameregex","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [AuthService]\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n    <flash-messages></flash-messages>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {RouterModule, Routes} from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NutritionComponent } from './components/nutrition/nutrition.component';\nimport { AboutComponent } from './components/about/about.component';\n \nimport { ValidateService } from './services/validate.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NutritionAnalysisService } from './services/nutrition-analysis.service'\n\nconst appRoutes:Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'nutrition', component: NutritionComponent, canActivate:[AuthGuard]}, \n  {path:'about', component: AboutComponent, }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    NutritionComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n  ],\n  providers: [ValidateService, AuthService, AuthGuard, NutritionAnalysisService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport{AuthService} from '../../services/auth.service'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  constructor(private authService: AuthService, private router:Router) { }\n\n  ngOnInit() {}\n\n}\n","<div class=\"jumbotron  text-center lr\">\n  <h1 class=\"display-4\">Nutrition App</h1>\n  <p class=\"lead\">Submit the full text of any recipe or ingredient list to obtain a free nutrition analysis.</p>\n  <hr class=\"my-4\">\n\n  <p>I have used an API service from EDAMAM which allows for text analysis and nutritional analysis of a recipe using\n    A.I under their free developer license <a href=\"https://developer.edamam.com/\">https://developer.edamam.com/</a></p>\n  <br>\n  <p>I have used bootstrap 4 framework \"Slate\" made by Thomas Park under MIT license <a\n      href=\"https://bootswatch.com/slate/\">https://bootswatch.com/slate/</a></p>\n  <br>\n  <p>Background image from the artist: Burgess Williams <a\n      href=\"https://www.tokkoro.com/2628337-food.html\">https://www.tokkoro.com/2628337-food.html</a></p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  user:any;\n  constructor(public authService:AuthService) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(About => {\n      this.user = About.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","  <div class=\"jumbotron text-center lr\">\n    <h1 class=\"display-5\">Nutrition app</h1>\n    <div>\n        <p  class=\"lead\">Sign in to use the web app</p>\n        <a *ngIf=\"!authService.loggedIn()\" class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>\n        <a *ngIf=\"!authService.loggedIn()\" class=\"btn btn-info\" [routerLink]=\"['/login']\">Login</a>\n       \n      <ul *ngIf=\"authService.loggedIn()\" class=\"list-group\">\n        <p  class=\"lead\">Welcome back {{user.name}}</p>\n        <li class=\"list-group-item\"> Username: {{user.username}}</li>\n        <li class=\"list-group-item\"> Email: {{user.email}}</li>\n      </ul>\n    </div>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success',\n          timeout: 5000});\n        this.router.navigate(['nutrition']);\n      } else {\n        this.flashMessage.show(data.msg, {\n          cssClass: 'alert-danger',\n          timeout: 5000});\n        this.router.navigate(['login']);\n      }\n    });\n  }\n\n}\n","\n<div class=\"jumbotron lr\" >\n  <h2 class=\"page-header text-center\">Login</h2>\n  <form (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n      <label>Username</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    \n    <input type=\"submit\" class=\"btn btn-primary btn-block\" value=\"Login\">\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService) { }\n \n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass:'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","<div class=\"navbar navbar-expand-sm  navbar-dark bg-primary\">\n  <div class=\"container\" >\n    <a class=\"navbar-brand mr-auto\" [routerLink]=\"['/']\">RafaCast</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"nav navbar-nav ml-auto\">\n        <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/nutrition']\" >Nutrition</a></li>\n        <li  class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/about']\">About</a></li>\n        <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/login']\" >Login</a></li>\n        <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\"><a  class=\"nav-link\" [routerLink]=\"['/register']\" >Register</a></li>     \n        <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\"><a  class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a></li>     \n      </ul>\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"navbar navbar-expand-sm  navbar-dark bg-primary \">\n  <div class=\"container\" >\n    <a class=\"navbar-brand mr-auto\" [routerLink]=\"['/']\">RafaCast</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"nav navbar-nav ml-auto\">\n        <li * class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/nutrition']\" routerLinkActive=\"active\">Nutrition</a></li>\n        <li  class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/about']\" routerLinkActive=\"active\">About</a></li>\n        <li  class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/login']\" routerLinkActive=\"active\">Login</a></li>\n        <li  class=\"nav-item\"><a  class=\"nav-link\" [routerLink]=\"['/register']\" routerLinkActive=\"active\">Register</a></li>     \n        <li  class=\"nav-item\"><a  class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a></li>     \n      </ul>\n    </div>\n  </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { NutritionAnalysisService } from '../../services/nutrition-analysis.service'\n\n@Component({\n  selector: 'app-nutrition',\n  templateUrl: './nutrition.component.html',\n  styleUrls: ['./nutrition.component.css']\n})\nexport class NutritionComponent implements OnInit {\n  tittle: String = '';\n  yield: String = '';\n  ingrS: String = '';\n  nutriets;\n  error;\n  \n  constructor(private NutritionAnalysisService: NutritionAnalysisService) { }\n\n  ngOnInit() {\n  }\n  onRecipeSubmit(){\n    const recipe = {\n      tittle: this.tittle,\n      yield: this.yield,\n      ingr : this.ingrS.split(\"\\n\")\n    }\n    this.NutritionAnalysisService.postFoodRecipeNutriAnalysis(recipe)\n    .subscribe(\n      res => this.nutriets = res,\n      err => this.error = err\n    )\n  }\n  trimIt0(esto: String){\n    esto.slice(0,2);\n    return esto;\n  }\n}\n","<div class=\"jumbotron\" style=\"margin-top: 5%;\">\n  <h1 class=\"text-center display-3\">Get Your Meal Nutrition!</h1>\n  <div class=\"row\" style=\"margin-top: 40px;\">\n    <div class=\"col\" style=\"max-width: 60%;\">\n      <div class=\"card text-white bg-secondary mb-3\" style=\"padding: 20px;\">\n        <form (submit)=\"onRecipeSubmit()\" id=\"recipeForm col-form-label-lg\">\n          <div class=\"form-group\">\n            <label class=\"  col-form-label col-form-label-lg \" for=\"inputLarge\">Recipe Tittle</label>\n            <input type=\"text\" class=\"form-control form-control-md\" [(ngModel)]=\"tittle\" name=\"tittle\"\n              placeholder=\"Lasagne\" id=\"inputLarge\">\n          </div>\n          <div class=\"form-group \">\n            <label class=\"col-form-label col-form-label-lg\" for=\"inputLarge\">Servings</label>\n            <input class=\"form-control form-control-md\" type=\"text\" placeholder=\"3\" id=\"inputLarge\" [(ngModel)]=\"yield\"\n              name=\"yield\">\n          </div>\n\n          <div class=\"form-group \">\n            <label class=\"col-form-label col-form-label-lg\" for=\"inputLarge\">Recipe Ingredients</label>\n            <textarea class=\"form-control\" id=\"exampleTextarea inputLarge\" rows=\"10\" spellcheck=\"false\"\n              [(ngModel)]=\"ingrS\" name=\"ingrS\" spellcheck=\"true\"\n              placeholder=\"Input every Ingredient in a new line like the example below &#10;1 cup rice &#10;10 oz chickpeas&#10;200g chicken\"></textarea>\n          </div>\n          <input type=\"submit\" class=\"btn btn-primary btn-lg btn-block\" value=\"Analyze\">\n        </form>\n      </div>\n    </div>\n    <div class=\"col\" style=\"max-width:40%;\">\n      <div class=\"card text-white bg-secondary mb-3\" style=\"padding:20px;\">\n        <label class=\" text-center col-form-label col-form-label-lg \">Nutrition Facts</label>\n        <footer class=\"blockquote-footer text-right\">Amount Per Serving</footer>\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Info</th>\n              <th scope=\"col\">Amount</th>\n            </tr>\n          </thead>\n          <tbody *ngIf=\"nutriets\">\n            <tr>\n              <th scope=\"row\">Calories</th>\n              <td>{{nutriets.totalNutrients.ENERC_KCAL.quantity}} {{nutriets.totalNutrients.ENERC_KCAL.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Fat</th>\n              <td>{{nutriets.totalNutrients.FAT.quantity}} {{nutriets.totalNutrients.FAT.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Cholesterol</th>\n              <td>{{nutriets.totalNutrients.CHOLE.quantity}} {{nutriets.totalNutrients.CHOLE.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Sodium</th>\n              <td>{{nutriets.totalNutrients.NA.quantity}} {{nutriets.totalNutrients.NA.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Carbohydrate</th>\n              <td>{{nutriets.totalNutrients.CHOCDF.quantity}} {{nutriets.totalNutrients.CHOCDF.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Protein</th>\n              <td>{{nutriets.totalNutrients.PROCNT.quantity}} {{nutriets.totalNutrients.PROCNT.unit}}</td>\n            </tr>\n          </tbody>\n        </table>\n        <footer class=\"blockquote-footer text-center\">Percent Daily Values are based on a 2000 calorie diet</footer>\n      </div>\n    </div>\n  </div>\n    <p *ngIf=\"error\" class=\"text-center text-danger text-lg\">We cannot calculate the nutrition for some ingredients. Please check the ingredient spelling or if\n      you have entered a quantities for the ingredients.</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService, \n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    //Required Fields\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n      \n    }\n\n   // Validate Email\n    if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n     // Validate name\n     if(!this.validateService.validateName(user.name)){\n      this.flashMessage.show('Please use only letters for name', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n     // Validate Username\n     if(!this.validateService.validateUsername(user.username)){\n      this.flashMessage.show('Please use only letters and numbers for username', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // Register user\n    this.authService.registerUser(user).subscribe(data => {\n      if(data.success){\n        this.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n\n}\n","\n  <div class=\"jumbotron lr\" >\n    <h2 class=\"page-header text-center\" id=\"registerm\">Register</h2>\n    <form (submit)=\"onRegisterSubmit()\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary btn-block\" value=\"Submit\">\n    </form>\n  </div>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (private authService:AuthService, private router:Router){\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { tokenNotExpired } from 'angular2-jwt';\nimport 'rxjs/add/operator/map'\n\n\n@Injectable()\nexport class AuthService {\n  authToken: any;\n  user:any;\n  constructor(private http:Http) { }\n  registerUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers:headers})\n      .map(res => res.json());\n  }\n  \n  authenticateUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user,{headers: headers})\n      .map(res => res.json());\n  }\n\n  getProfile(){\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get('http://localhost:3000/users/home',{headers: headers})\n      .map(res => res.json());\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n   loggedIn(){\n     return tokenNotExpired('id_token');\n   }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n//import { HttpClientModule }    from '@angular/common/http';\n//import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Http, Headers } from '@angular/http';\n\n@Injectable()\nexport class NutritionAnalysisService {\n\n  private nutritionAnalysisURL = 'https://api.edamam.com/api/nutrition-details?app_id=46b02561&app_key=0a863a22bc381671f596568630268aa4'\n  appID = '46b02561';\n  appKey = '0a863a22bc381671f596568630268aa4'\n\n  constructor(\n    private http: Http,\n    \n  ) { }\n\n\n\n////////// POST and GET methods //////////\n\n/** POST: send food recipe for nutritional analysis */\n   postFoodRecipeNutriAnalysis(recipe){\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return this.http.post('https://api.edamam.com/api/nutrition-details?app_id=46b02561&app_key=0a863a22bc381671f596568630268aa4', recipe,{headers: headers})\n    .map(res => res.json());\n   }\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n  \n  validateRegister(user){\n    \n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n  validateUsername(username){\n    const useregex = /^[a-zA-Z0-9]+$/;\n    return useregex.test(username);\n  }\n  validateName(name){\n    const nameregex = /^[a-zA-Z_ ]+$/;\n    return nameregex.test(name);\n  }\n\n\n}\n\n\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}