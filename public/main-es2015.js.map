{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/nutrition/nutrition.component.ts","./src/app/components/nutrition/nutrition.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/nutrition-analysis.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACY;;;;;AAQ/C,MAAM,YAAY;IANzB;QAOE,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;4FAAZ,YAAY,yGAFZ,CAAC,kEAAW,CAAC;QCP1B,wEAAyB;QACzB,yEACI;QAAA,4EAAiC;QACjC,2EAA+B;QACnC,4DAAM;;6FDKO,YAAY;cANxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;gBAClC,SAAS,EAAE,CAAC,kEAAW,CAAC;aACzB;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACF;AACS;AAEL;AACwB;AACH;AACS;AACZ;AACe;AACZ;AAEN;AACA;AACR;AACN;AACgC;;;;AAEhF,MAAM,SAAS,GAAU;IACvB,EAAC,IAAI,EAAC,EAAE,EAAE,SAAS,EAAE,6EAAa,EAAC;IACnC,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAC;IAC/C,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAC;IACzC,EAAC,IAAI,EAAC,WAAW,EAAE,SAAS,EAAE,6FAAkB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAC;IAC1E,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAE,iFAAc,GAAG;CAC5C;AAsBM,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,2EAAe,EAAE,mEAAW,EAAE,6DAAS,EAAE,8FAAwB,CAAC,YAPrE;YACP,uEAAa;YACb,0DAAW;YACX,wDAAU;YACV,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;YAC/B,4EAAmB,CAAC,OAAO,EAAE;SAC9B;mIAIU,SAAS,mBAlBlB,2DAAY;QACZ,mFAAe;QACf,gFAAc;QACd,yFAAiB;QACjB,6EAAa;QACb,6FAAkB;QAClB,iFAAc,aAGd,uEAAa;QACb,0DAAW;QACX,wDAAU;6FAOD,SAAS;cApBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,mFAAe;oBACf,gFAAc;oBACd,yFAAiB;oBACjB,6EAAa;oBACb,6FAAkB;oBAClB,iFAAc;iBACf;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,wDAAU;oBACV,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;oBAC/B,4EAAmB,CAAC,OAAO,EAAE;iBAC9B;gBACD,SAAS,EAAE,CAAC,2EAAe,EAAE,mEAAW,EAAE,6DAAS,EAAE,8FAAwB,CAAC;gBAC9E,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/CD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAS3C,MAAM,cAAc;IACzB,YAAoB,WAAwB,EAAU,MAAa;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAExE,QAAQ,KAAI,CAAC;;4EAHF,cAAc;8FAAd,cAAc;QCT3B,yEACE;QAAA,wEAAsB;QAAA,wEAAa;QAAA,4DAAK;QACxC,uEAAgB;QAAA,qJAA0F;QAAA,4DAAI;QAC9G,mEAEA;QAAA,oEAAG;QAAA,mNACsC;QAAA,uEAAwC;QAAA,wFAA6B;QAAA,4DAAI;QAAA,4DAAI;QACtH,iEACA;QAAA,qEAAG;QAAA,8IAAgF;QAAA,wEAC1C;QAAA,yFAA6B;QAAA,4DAAI;QAAA,4DAAI;QAC9E,iEACA;QAAA,qEAAG;QAAA,+GAAmD;QAAA,wEACD;QAAA,qGAAyC;QAAA,4DAAI;QAAA,4DAAI;QACxG,4DAAM;;6FDJO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICI1C,uEAAwF;IAAA,mEAAQ;IAAA,4DAAI;;IAAzC,6IAA4B;;;;IACvF,uEAAkF;IAAA,gEAAK;IAAA,4DAAI;;IAAnC,6IAAyB;;;IAEnF,wEACE;IAAA,uEAAiB;IAAA,uDAA0B;IAAA,4DAAI;IAC/C,wEAA6B;IAAA,uDAA2B;IAAA,4DAAK;IAC7D,wEAA6B;IAAA,uDAAqB;IAAA,4DAAK;IACzD,4DAAK;;;IAHc,0DAA0B;IAA1B,uGAA0B;IACd,0DAA2B;IAA3B,yGAA2B;IAC3B,0DAAqB;IAArB,mGAAqB;;ADFnD,MAAM,aAAa;IAExB,YAAmB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAAI,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC9C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACzB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;;0EAZU,aAAa;6FAAb,aAAa;QCRxB,yEACE;QAAA,wEAAsB;QAAA,wEAAa;QAAA,4DAAK;QACxC,sEACI;QAAA,uEAAiB;QAAA,qFAA0B;QAAA,4DAAI;QAC/C,qGAAwF;QACxF,qGAAkF;QAEpF,uGACE;QAIJ,4DAAM;QACR,4DAAM;;QATG,0DAA+B;QAA/B,6FAA+B;QAC/B,0DAA+B;QAA/B,6FAA+B;QAEhC,0DAA8B;QAA9B,4FAA8B;;6FDC3B,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,cAAc;IAIzB,YACU,WAAuB,EACvB,MAAa,EACb,YAAiC;QAFjC,gBAAW,GAAX,WAAW,CAAY;QACvB,WAAM,GAAN,MAAM,CAAO;QACb,iBAAY,GAAZ,YAAY,CAAqB;IACvC,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,aAAa;QACX,MAAM,IAAI,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QAED,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvD,IAAG,IAAI,CAAC,OAAO,EAAC;gBACd,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,EAAE;oBAC9C,QAAQ,EAAE,eAAe;oBACzB,OAAO,EAAE,IAAI;iBAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;oBAC/B,QAAQ,EAAE,cAAc;oBACxB,OAAO,EAAE,IAAI;iBAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;4EAjCU,cAAc;8FAAd,cAAc;QCT3B,yEACE;QAAA,wEAAoC;QAAA,gEAAK;QAAA,4DAAK;QAC9C,0EACE;QADI,sIAAU,mBAAe,IAAC;QAC9B,yEACE;QAAA,wEAAO;QAAA,mEAAQ;QAAA,4DAAQ;QACvB,2EACF;QAD0C,oLAAsB;QAA9D,4DACF;QAAA,4DAAM;QACN,yEACE;QAAA,wEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EACF;QAD8C,qLAAsB;QAAlE,4DACF;QAAA,4DAAM;QAEN,uEACF;QAAA,4DAAO;QACT,4DAAM;;QATwC,0DAAsB;QAAtB,iFAAsB;QAIlB,0DAAsB;QAAtB,iFAAsB;;6FDA3D,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICQ1C,wEAAoD;IAAA,uEAAmD;IAAA,oEAAS;IAAA,4DAAI;IAAA,4DAAK;;IAAjD,0DAA6B;IAA7B,6IAA6B;;;;IAErG,wEAAqD;IAAA,uEAA+C;IAAA,gEAAK;IAAA,4DAAI;IAAA,4DAAK;;IAAzC,0DAAyB;IAAzB,6IAAyB;;;;IAClG,wEAAqD;IAAA,uEAAmD;IAAA,mEAAQ;IAAA,4DAAI;IAAA,4DAAK;;IAA/C,0DAA4B;IAA5B,6IAA4B;;;;IACtG,wEAAoD;IAAA,wEAAwD;IAAnC,kTAAyB;IAAU,iEAAM;IAAA,4DAAI;IAAA,4DAAK;;;;ADF5H,MAAM,eAAe;IAE1B,YACS,WAAuB,EACtB,MAAa,EACb,YAAiC;QAFlC,gBAAW,GAAX,WAAW,CAAY;QACtB,WAAM,GAAN,MAAM,CAAO;QACb,iBAAY,GAAZ,YAAY,CAAqB;IAAI,CAAC;IAEhD,QAAQ;IACR,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC3C,QAAQ,EAAC,eAAe;YACxB,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACf,CAAC;;8EAlBU,eAAe;+FAAf,eAAe;QCV5B,yEACE;QAAA,yEACE;QAAA,uEAAqD;QAAA,mEAAQ;QAAA,4DAAI;QACjE,4EACE;QAAA,qEAAyC;QAC3C,4DAAS;QACT,yEACE;QAAA,wEACE;QAAA,yGAAoD;QACpD,wEAAsB;QAAA,wEAA8C;QAAA,iEAAK;QAAA,4DAAI;QAAA,4DAAK;QAClF,2GAAqD;QACrD,2GAAqD;QACrD,2GAAoD;QACtD,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAd8B,0DAAoB;QAApB,6IAAoB;QAM5C,0DAA8B;QAA9B,4FAA8B;QACQ,0DAAyB;QAAzB,6IAAyB;QAC/D,0DAA+B;QAA/B,6FAA+B;QAC/B,0DAA+B;QAA/B,6FAA+B;QAC/B,0DAA8B;QAA9B,4FAA8B;;6FDF7B,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICsCxC,wEACE;IAAA,qEACE;IAAA,yEAAgB;IAAA,mEAAQ;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAA2F;IAAA,4DAAK;IACtG,4DAAK;IACL,qEACE;IAAA,yEAAgB;IAAA,8DAAG;IAAA,4DAAK;IACxB,qEAAI;IAAA,wDAA6E;IAAA,4DAAK;IACxF,4DAAK;IACL,sEACE;IAAA,0EAAgB;IAAA,uEAAW;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAAiF;IAAA,4DAAK;IAC5F,4DAAK;IACL,sEACE;IAAA,0EAAgB;IAAA,kEAAM;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wDAA2E;IAAA,4DAAK;IACtF,4DAAK;IACL,sEACE;IAAA,0EAAgB;IAAA,wEAAY;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAmF;IAAA,4DAAK;IAC9F,4DAAK;IACL,sEACE;IAAA,0EAAgB;IAAA,mEAAO;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAmF;IAAA,4DAAK;IAC9F,4DAAK;IACP,4DAAQ;;;IAtBA,0DAA2F;IAA3F,iLAA2F;IAI3F,0DAA6E;IAA7E,mKAA6E;IAI7E,0DAAiF;IAAjF,uKAAiF;IAIjF,0DAA2E;IAA3E,iKAA2E;IAI3E,0DAAmF;IAAnF,yKAAmF;IAInF,0DAAmF;IAAnF,yKAAmF;;;IAQjG,wEAAyD;IAAA,gNACL;IAAA,4DAAI;;AD9DrD,MAAM,kBAAkB;IAO7B,YAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;QANtE,WAAM,GAAW,EAAE,CAAC;QACpB,UAAK,GAAW,EAAE,CAAC;QACnB,UAAK,GAAW,EAAE,CAAC;IAIuD,CAAC;IAE3E,QAAQ;IACR,CAAC;IACD,cAAc;QACZ,MAAM,MAAM,GAAG;YACb,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;SAC9B;QACD,IAAI,CAAC,wBAAwB,CAAC,2BAA2B,CAAC,MAAM,CAAC;aAChE,SAAS,CACR,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,EAC1B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CACxB;IACH,CAAC;IACD,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAChB,OAAO,IAAI,CAAC;IACd,CAAC;;oFA1BU,kBAAkB;kGAAlB,kBAAkB;QCR/B,yEACE;QAAA,wEAAkC;QAAA,mFAAwB;QAAA,4DAAK;QAC/D,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EACE;QADI,0IAAU,oBAAgB,IAAC;QAC/B,yEACE;QAAA,2EAAoE;QAAA,wEAAa;QAAA,4DAAQ;QACzF,4EAEF;QAF0D,uLAAoB;QAA5E,4DAEF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAiE;QAAA,oEAAQ;QAAA,4DAAQ;QACjF,4EAEF;QAF0F,sLAAmB;QAA3G,4DAEF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAiE;QAAA,8EAAkB;QAAA,4DAAQ;QAC3F,gFAE6I;QAD3I,yLAAmB;QAC6G,4DAAW;QAC/I,4DAAM;QACN,wEACF;QAAA,4DAAO;QACT,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,0EACE;QAAA,6EAA8D;QAAA,2EAAe;QAAA,4DAAQ;QACrF,8EAA6C;QAAA,8EAAkB;QAAA,4DAAS;QACxE,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC7B,4DAAK;QACP,4DAAQ;QACR,uHACE;QAyBJ,4DAAQ;QACR,8EAA8C;QAAA,iHAAqD;QAAA,4DAAS;QAC9G,4DAAM;QACR,4DAAM;QACR,4DAAM;QACJ,6GAAyD;QAE7D,4DAAM;;QA/D8D,2DAAoB;QAApB,+EAAoB;QAKY,0DAAmB;QAAnB,8EAAmB;QAOzG,0DAAmB;QAAnB,8EAAmB;QAkBhB,2DAAgB;QAAhB,8EAAgB;QA+B1B,0DAAa;QAAb,2EAAa;;6FD7DP,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAW3C,MAAM,iBAAiB;IAM5B,YACU,eAAgC,EAChC,YAAkC,EAClC,WAAwB,EACxB,MAAc;QAHd,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAsB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAClB,CAAC;IAEP,QAAQ;IACR,CAAC;IAED,gBAAgB;QACd,MAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QAED,iBAAiB;QACjB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YAC/F,OAAO,KAAK,CAAC;SAEd;QAEF,iBAAiB;QAChB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YACjD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YAC9F,OAAO,KAAK,CAAC;SACd;QAEA,gBAAgB;QAChB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;YAChD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kCAAkC,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACtG,OAAO,KAAK,CAAC;SACd;QAEA,oBAAoB;QACpB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;YACxD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kDAAkD,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACtH,OAAO,KAAK,CAAC;SACd;QAED,gBAAgB;QAChB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnD,IAAG,IAAI,CAAC,OAAO,EAAC;gBACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uCAAuC,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;gBAC5G,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;gBAC1F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kFA3DU,iBAAiB;iGAAjB,iBAAiB;QCV5B,yEACE;QAAA,wEAAmD;QAAA,mEAAQ;QAAA,4DAAK;QAChE,0EACE;QADI,yIAAU,sBAAkB,IAAC;QACjC,yEACE;QAAA,wEAAO;QAAA,+DAAI;QAAA,4DAAQ;QACnB,2EACF;QADqB,mLAAkB;QAArC,4DACF;QAAA,4DAAM;QACN,yEACE;QAAA,wEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EACF;QADqB,wLAAsB;QAAzC,4DACF;QAAA,4DAAM;QACN,0EACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,4EACF;QADqB,qLAAmB;QAAtC,4DACF;QAAA,4DAAM;QACN,0EACE;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EACF;QADyB,wLAAsB;QAA7C,4DACF;QAAA,4DAAM;QACN,uEACF;QAAA,4DAAO;QACT,4DAAM;;QAhBmB,0DAAkB;QAAlB,6EAAkB;QAIlB,0DAAsB;QAAtB,iFAAsB;QAItB,0DAAmB;QAAnB,8EAAmB;QAIf,0DAAsB;QAAtB,iFAAsB;;6FDPxC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAKpC,MAAM,SAAS;IACpB,YAAqB,WAAuB,EAAU,MAAa;QAA9C,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAO;IAEnE,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;kEAZU,SAAS;4FAAT,SAAS,WAAT,SAAS;6FAAT,SAAS;cADrB,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACG;AACC;AACjB;;;AAIvB,MAAM,WAAW;IAGtB,YAAoB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IAClC,YAAY,CAAC,IAAI;QACf,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aAC7D,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,gBAAgB,CAAC,IAAI;QACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACjE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,UAAU;QACR,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAClD,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,aAAa,CAAC,KAAK,EAAE,IAAI;QACvB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,SAAS;QACP,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IACA,QAAQ;QACN,OAAO,oEAAe,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IAEF,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;;sEA9CU,WAAW;8FAAX,WAAW,WAAX,WAAW;6FAAX,WAAW;cADvB,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAA2C;AAC3C,6DAA6D;AAC7D,iEAAiE;AACnB;;;AAGvC,MAAM,wBAAwB;IAMnC,YACU,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QALZ,yBAAoB,GAAG,uGAAuG;QACtI,UAAK,GAAG,UAAU,CAAC;QACnB,WAAM,GAAG,kCAAkC;IAKvC,CAAC;IAIP,0CAA0C;IAE1C,sDAAsD;IACnD,2BAA2B,CAAC,MAAM;QAChC,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uGAAuG,EAAE,MAAM,EAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACzJ,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IACzB,CAAC;;gGArBS,wBAAwB;2GAAxB,wBAAwB,WAAxB,wBAAwB;6FAAxB,wBAAwB;cADpC,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAA2C;;AAGpC,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,gBAAgB,CAAC,IAAI;QAEnB,IAAG,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAC;YAC/G,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,MAAM,EAAE,GAAG,wJAAwJ,CAAC;QACpK,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IACD,gBAAgB,CAAC,QAAQ;QACvB,MAAM,QAAQ,GAAG,gBAAgB,CAAC;QAClC,OAAO,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IACD,YAAY,CAAC,IAAI;QACf,MAAM,SAAS,GAAG,eAAe,CAAC;QAClC,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;;8EAxBU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACFX;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACNF;AAAA;AAAA;AAAA;AAAA;AAA+C;AACU;;;AAGzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [AuthService]\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n    <flash-messages></flash-messages>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {RouterModule, Routes} from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NutritionComponent } from './components/nutrition/nutrition.component';\nimport { AboutComponent } from './components/about/about.component';\n \nimport { ValidateService } from './services/validate.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NutritionAnalysisService } from './services/nutrition-analysis.service'\n\nconst appRoutes:Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'nutrition', component: NutritionComponent, canActivate:[AuthGuard]}, \n  {path:'about', component: AboutComponent, }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    NutritionComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n  ],\n  providers: [ValidateService, AuthService, AuthGuard, NutritionAnalysisService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport{AuthService} from '../../services/auth.service'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  constructor(private authService: AuthService, private router:Router) { }\n\n  ngOnInit() {}\n\n}\n","<div class=\"jumbotron  text-center lr\">\n  <h1 class=\"display-4\">Nutrition App</h1>\n  <p class=\"lead\">Submit the full text of any recipe or ingredient list to obtain a free nutrition analysis.</p>\n  <hr class=\"my-4\">\n\n  <p>I have used an API service from EDAMAM which allows for text analysis and nutritional analysis of a recipe using\n    A.I under their free developer license <a href=\"https://developer.edamam.com/\">https://developer.edamam.com/</a></p>\n  <br>\n  <p>I have used bootstrap 4 framework \"Slate\" made by Thomas Park under MIT license <a\n      href=\"https://bootswatch.com/slate/\">https://bootswatch.com/slate/</a></p>\n  <br>\n  <p>Background image from the artist: Burgess Williams <a\n      href=\"https://www.tokkoro.com/2628337-food.html\">https://www.tokkoro.com/2628337-food.html</a></p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  user:any;\n  constructor(public authService:AuthService) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(About => {\n      this.user = About.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","  <div class=\"jumbotron text-center lr\">\n    <h1 class=\"display-5\">Nutrition app</h1>\n    <div>\n        <p  class=\"lead\">Sign in to use the web app</p>\n        <a *ngIf=\"!authService.loggedIn()\" class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>\n        <a *ngIf=\"!authService.loggedIn()\" class=\"btn btn-info\" [routerLink]=\"['/login']\">Login</a>\n       \n      <ul *ngIf=\"authService.loggedIn()\" class=\"list-group\">\n        <p  class=\"lead\">Welcome back {{user.name}}</p>\n        <li class=\"list-group-item\"> Username: {{user.username}}</li>\n        <li class=\"list-group-item\"> Email: {{user.email}}</li>\n      </ul>\n    </div>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success',\n          timeout: 5000});\n        this.router.navigate(['nutrition']);\n      } else {\n        this.flashMessage.show(data.msg, {\n          cssClass: 'alert-danger',\n          timeout: 5000});\n        this.router.navigate(['login']);\n      }\n    });\n  }\n\n}\n","\n<div class=\"jumbotron lr\" >\n  <h2 class=\"page-header text-center\">Login</h2>\n  <form (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n      <label>Username</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    \n    <input type=\"submit\" class=\"btn btn-primary btn-block\" value=\"Login\">\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService) { }\n \n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass:'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","<div class=\"navbar navbar-expand-sm  navbar-dark bg-primary\">\n  <div class=\"container\" >\n    <a class=\"navbar-brand mr-auto\" [routerLink]=\"['/']\">RafaCast</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"nav navbar-nav ml-auto\">\n        <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/nutrition']\" >Nutrition</a></li>\n        <li  class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/about']\">About</a></li>\n        <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/login']\" >Login</a></li>\n        <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\"><a  class=\"nav-link\" [routerLink]=\"['/register']\" >Register</a></li>     \n        <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\"><a  class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a></li>     \n      </ul>\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"navbar navbar-expand-sm  navbar-dark bg-primary \">\n  <div class=\"container\" >\n    <a class=\"navbar-brand mr-auto\" [routerLink]=\"['/']\">RafaCast</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"nav navbar-nav ml-auto\">\n        <li * class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/nutrition']\" routerLinkActive=\"active\">Nutrition</a></li>\n        <li  class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/about']\" routerLinkActive=\"active\">About</a></li>\n        <li  class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/login']\" routerLinkActive=\"active\">Login</a></li>\n        <li  class=\"nav-item\"><a  class=\"nav-link\" [routerLink]=\"['/register']\" routerLinkActive=\"active\">Register</a></li>     \n        <li  class=\"nav-item\"><a  class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a></li>     \n      </ul>\n    </div>\n  </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { NutritionAnalysisService } from '../../services/nutrition-analysis.service'\n\n@Component({\n  selector: 'app-nutrition',\n  templateUrl: './nutrition.component.html',\n  styleUrls: ['./nutrition.component.css']\n})\nexport class NutritionComponent implements OnInit {\n  tittle: String = '';\n  yield: String = '';\n  ingrS: String = '';\n  nutriets;\n  error;\n  \n  constructor(private NutritionAnalysisService: NutritionAnalysisService) { }\n\n  ngOnInit() {\n  }\n  onRecipeSubmit(){\n    const recipe = {\n      tittle: this.tittle,\n      yield: this.yield,\n      ingr : this.ingrS.split(\"\\n\")\n    }\n    this.NutritionAnalysisService.postFoodRecipeNutriAnalysis(recipe)\n    .subscribe(\n      res => this.nutriets = res,\n      err => this.error = err\n    )\n  }\n  trimIt0(esto: String){\n    esto.slice(0,2);\n    return esto;\n  }\n}\n","<div class=\"jumbotron\" style=\"margin-top: 5%;\">\n  <h1 class=\"text-center display-3\">Get Your Meal Nutrition!</h1>\n  <div class=\"row\" style=\"margin-top: 40px;\">\n    <div class=\"col\" style=\"max-width: 60%;\">\n      <div class=\"card text-white bg-secondary mb-3\" style=\"padding: 20px;\">\n        <form (submit)=\"onRecipeSubmit()\" id=\"recipeForm col-form-label-lg\">\n          <div class=\"form-group\">\n            <label class=\"  col-form-label col-form-label-lg \" for=\"inputLarge\">Recipe Tittle</label>\n            <input type=\"text\" class=\"form-control form-control-md\" [(ngModel)]=\"tittle\" name=\"tittle\"\n              placeholder=\"Lasagne\" id=\"inputLarge\">\n          </div>\n          <div class=\"form-group \">\n            <label class=\"col-form-label col-form-label-lg\" for=\"inputLarge\">Servings</label>\n            <input class=\"form-control form-control-md\" type=\"text\" placeholder=\"3\" id=\"inputLarge\" [(ngModel)]=\"yield\"\n              name=\"yield\">\n          </div>\n\n          <div class=\"form-group \">\n            <label class=\"col-form-label col-form-label-lg\" for=\"inputLarge\">Recipe Ingredients</label>\n            <textarea class=\"form-control\" id=\"exampleTextarea inputLarge\" rows=\"10\" spellcheck=\"false\"\n              [(ngModel)]=\"ingrS\" name=\"ingrS\" spellcheck=\"true\"\n              placeholder=\"Input every Ingredient in a new line like the example below &#10;1 cup rice &#10;10 oz chickpeas&#10;200g chicken\"></textarea>\n          </div>\n          <input type=\"submit\" class=\"btn btn-primary btn-lg btn-block\" value=\"Analyze\">\n        </form>\n      </div>\n    </div>\n    <div class=\"col\" style=\"max-width:40%;\">\n      <div class=\"card text-white bg-secondary mb-3\" style=\"padding:20px;\">\n        <label class=\" text-center col-form-label col-form-label-lg \">Nutrition Facts</label>\n        <footer class=\"blockquote-footer text-right\">Amount Per Serving</footer>\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Info</th>\n              <th scope=\"col\">Amount</th>\n            </tr>\n          </thead>\n          <tbody *ngIf=\"nutriets\">\n            <tr>\n              <th scope=\"row\">Calories</th>\n              <td>{{nutriets.totalNutrients.ENERC_KCAL.quantity}} {{nutriets.totalNutrients.ENERC_KCAL.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Fat</th>\n              <td>{{nutriets.totalNutrients.FAT.quantity}} {{nutriets.totalNutrients.FAT.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Cholesterol</th>\n              <td>{{nutriets.totalNutrients.CHOLE.quantity}} {{nutriets.totalNutrients.CHOLE.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Sodium</th>\n              <td>{{nutriets.totalNutrients.NA.quantity}} {{nutriets.totalNutrients.NA.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Carbohydrate</th>\n              <td>{{nutriets.totalNutrients.CHOCDF.quantity}} {{nutriets.totalNutrients.CHOCDF.unit}}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Protein</th>\n              <td>{{nutriets.totalNutrients.PROCNT.quantity}} {{nutriets.totalNutrients.PROCNT.unit}}</td>\n            </tr>\n          </tbody>\n        </table>\n        <footer class=\"blockquote-footer text-center\">Percent Daily Values are based on a 2000 calorie diet</footer>\n      </div>\n    </div>\n  </div>\n    <p *ngIf=\"error\" class=\"text-center text-danger text-lg\">We cannot calculate the nutrition for some ingredients. Please check the ingredient spelling or if\n      you have entered a quantities for the ingredients.</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService, \n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    //Required Fields\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n      \n    }\n\n   // Validate Email\n    if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n     // Validate name\n     if(!this.validateService.validateName(user.name)){\n      this.flashMessage.show('Please use only letters for name', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n     // Validate Username\n     if(!this.validateService.validateUsername(user.username)){\n      this.flashMessage.show('Please use only letters and numbers for username', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // Register user\n    this.authService.registerUser(user).subscribe(data => {\n      if(data.success){\n        this.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n\n}\n","\n  <div class=\"jumbotron lr\" >\n    <h2 class=\"page-header text-center\" id=\"registerm\">Register</h2>\n    <form (submit)=\"onRegisterSubmit()\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary btn-block\" value=\"Submit\">\n    </form>\n  </div>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (private authService:AuthService, private router:Router){\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { tokenNotExpired } from 'angular2-jwt';\nimport 'rxjs/add/operator/map'\n\n\n@Injectable()\nexport class AuthService {\n  authToken: any;\n  user:any;\n  constructor(private http:Http) { }\n  registerUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/register', user, {headers:headers})\n      .map(res => res.json());\n  }\n  \n  authenticateUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('users/authenticate', user,{headers: headers})\n      .map(res => res.json());\n  }\n\n  getProfile(){\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get('users/home',{headers: headers})\n      .map(res => res.json());\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n   loggedIn(){\n     return tokenNotExpired('id_token');\n   }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n//import { HttpClientModule }    from '@angular/common/http';\n//import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Http, Headers } from '@angular/http';\n\n@Injectable()\nexport class NutritionAnalysisService {\n\n  private nutritionAnalysisURL = 'https://api.edamam.com/api/nutrition-details?app_id=46b02561&app_key=0a863a22bc381671f596568630268aa4'\n  appID = '46b02561';\n  appKey = '0a863a22bc381671f596568630268aa4'\n\n  constructor(\n    private http: Http,\n    \n  ) { }\n\n\n\n////////// POST and GET methods //////////\n\n/** POST: send food recipe for nutritional analysis */\n   postFoodRecipeNutriAnalysis(recipe){\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return this.http.post('https://api.edamam.com/api/nutrition-details?app_id=46b02561&app_key=0a863a22bc381671f596568630268aa4', recipe,{headers: headers})\n    .map(res => res.json());\n   }\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n  \n  validateRegister(user){\n    \n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n  validateUsername(username){\n    const useregex = /^[a-zA-Z0-9]+$/;\n    return useregex.test(username);\n  }\n  validateName(name){\n    const nameregex = /^[a-zA-Z_ ]+$/;\n    return nameregex.test(name);\n  }\n\n\n}\n\n\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":"webpack:///"}